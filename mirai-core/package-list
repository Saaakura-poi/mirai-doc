$dokka.format:html
$dokka.linkExtension:html
$dokka.location:net.mamoe.mirai$recallIn(kotlinx.coroutines.CoroutineScope, net.mamoe.mirai.message.data.MessageChain, kotlin.Long, kotlin.coroutines.CoroutineContext)net.mamoe.mirai/kotlinx.coroutines.-coroutine-scope/recall-in.html
$dokka.location:net.mamoe.mirai$recallIn(kotlinx.coroutines.CoroutineScope, net.mamoe.mirai.message.data.MessageSource, kotlin.Long, kotlin.coroutines.CoroutineContext)net.mamoe.mirai/kotlinx.coroutines.-coroutine-scope/recall-in.html
$dokka.location:net.mamoe.mirai.event$asyncFromEvent(kotlinx.coroutines.CoroutineScope, kotlin.Long, kotlin.coroutines.CoroutineContext, net.mamoe.mirai.event.Listener.EventPriority, kotlin.coroutines.SuspendFunction2((net.mamoe.mirai.event.asyncFromEvent.E, , net.mamoe.mirai.event.asyncFromEvent.R)))net.mamoe.mirai.event/kotlinx.coroutines.-coroutine-scope/async-from-event.html
$dokka.location:net.mamoe.mirai.event$asyncFromEventOrNull(kotlinx.coroutines.CoroutineScope, kotlin.Long, kotlin.coroutines.CoroutineContext, net.mamoe.mirai.event.Listener.EventPriority, kotlin.coroutines.SuspendFunction2((net.mamoe.mirai.event.asyncFromEventOrNull.E, , net.mamoe.mirai.event.asyncFromEventOrNull.R)))net.mamoe.mirai.event/kotlinx.coroutines.-coroutine-scope/async-from-event-or-null.html
$dokka.location:net.mamoe.mirai.event$incoming(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.CoroutineContext, net.mamoe.mirai.event.Listener.ConcurrencyKind, net.mamoe.mirai.event.Listener.EventPriority, kotlin.Int)net.mamoe.mirai.event/kotlinx.coroutines.-coroutine-scope/incoming.html
$dokka.location:net.mamoe.mirai.event$registerEvents(kotlinx.coroutines.CoroutineScope, net.mamoe.mirai.event.ListenerHost, kotlin.coroutines.CoroutineContext)net.mamoe.mirai.event/kotlinx.coroutines.-coroutine-scope/register-events.html
$dokka.location:net.mamoe.mirai.event$subscribe(kotlinx.coroutines.CoroutineScope, kotlin.Function1((net.mamoe.mirai.event.subscribe.E, net.mamoe.mirai.event.ListeningStatus)), net.mamoe.mirai.event.Listener.EventPriority, net.mamoe.mirai.event.Listener.ConcurrencyKind, kotlin.coroutines.CoroutineContext)net.mamoe.mirai.event/kotlinx.coroutines.-coroutine-scope/subscribe.html
$dokka.location:net.mamoe.mirai.event$subscribe(kotlinx.coroutines.CoroutineScope, kotlin.Function2((net.mamoe.mirai.event.subscribe.E, , net.mamoe.mirai.event.ListeningStatus)), net.mamoe.mirai.event.Listener.EventPriority, net.mamoe.mirai.event.Listener.ConcurrencyKind, kotlin.coroutines.CoroutineContext)net.mamoe.mirai.event/kotlinx.coroutines.-coroutine-scope/subscribe.html
$dokka.location:net.mamoe.mirai.event$subscribe(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.CoroutineContext, net.mamoe.mirai.event.Listener.ConcurrencyKind, net.mamoe.mirai.event.Listener.EventPriority, kotlin.coroutines.SuspendFunction2((net.mamoe.mirai.event.subscribe.E, , net.mamoe.mirai.event.ListeningStatus)))net.mamoe.mirai.event/kotlinx.coroutines.-coroutine-scope/subscribe.html
$dokka.location:net.mamoe.mirai.event$subscribe(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.SuspendFunction1((net.mamoe.mirai.event.subscribe.E, net.mamoe.mirai.event.ListeningStatus)), net.mamoe.mirai.event.Listener.EventPriority, net.mamoe.mirai.event.Listener.ConcurrencyKind, kotlin.coroutines.CoroutineContext)net.mamoe.mirai.event/kotlinx.coroutines.-coroutine-scope/subscribe.html
$dokka.location:net.mamoe.mirai.event$subscribe(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.SuspendFunction2((net.mamoe.mirai.event.subscribe.E, , net.mamoe.mirai.event.ListeningStatus)), net.mamoe.mirai.event.Listener.EventPriority, net.mamoe.mirai.event.Listener.ConcurrencyKind, kotlin.coroutines.CoroutineContext)net.mamoe.mirai.event/kotlinx.coroutines.-coroutine-scope/subscribe.html
$dokka.location:net.mamoe.mirai.event$subscribe(kotlinx.coroutines.CoroutineScope, kotlin.reflect.KClass((net.mamoe.mirai.event.subscribe.E)), kotlin.coroutines.CoroutineContext, net.mamoe.mirai.event.Listener.ConcurrencyKind, net.mamoe.mirai.event.Listener.EventPriority, kotlin.coroutines.SuspendFunction2((net.mamoe.mirai.event.subscribe.E, , net.mamoe.mirai.event.ListeningStatus)))net.mamoe.mirai.event/kotlinx.coroutines.-coroutine-scope/subscribe.html
$dokka.location:net.mamoe.mirai.event$subscribeAlways(kotlinx.coroutines.CoroutineScope, kotlin.Function1((net.mamoe.mirai.event.subscribeAlways.E, kotlin.Unit)), net.mamoe.mirai.event.Listener.EventPriority, net.mamoe.mirai.event.Listener.ConcurrencyKind, kotlin.coroutines.CoroutineContext)net.mamoe.mirai.event/kotlinx.coroutines.-coroutine-scope/subscribe-always.html
$dokka.location:net.mamoe.mirai.event$subscribeAlways(kotlinx.coroutines.CoroutineScope, kotlin.Function2((net.mamoe.mirai.event.subscribeAlways.E, , kotlin.Unit)), net.mamoe.mirai.event.Listener.EventPriority, net.mamoe.mirai.event.Listener.ConcurrencyKind, kotlin.coroutines.CoroutineContext)net.mamoe.mirai.event/kotlinx.coroutines.-coroutine-scope/subscribe-always.html
$dokka.location:net.mamoe.mirai.event$subscribeAlways(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.CoroutineContext, net.mamoe.mirai.event.Listener.ConcurrencyKind, net.mamoe.mirai.event.Listener.EventPriority, kotlin.coroutines.SuspendFunction2((net.mamoe.mirai.event.subscribeAlways.E, , kotlin.Unit)))net.mamoe.mirai.event/kotlinx.coroutines.-coroutine-scope/subscribe-always.html
$dokka.location:net.mamoe.mirai.event$subscribeAlways(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.SuspendFunction1((net.mamoe.mirai.event.subscribeAlways.E, kotlin.Unit)), net.mamoe.mirai.event.Listener.EventPriority, net.mamoe.mirai.event.Listener.ConcurrencyKind, kotlin.coroutines.CoroutineContext)net.mamoe.mirai.event/kotlinx.coroutines.-coroutine-scope/subscribe-always.html
$dokka.location:net.mamoe.mirai.event$subscribeAlways(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.SuspendFunction2((net.mamoe.mirai.event.subscribeAlways.E, , kotlin.Unit)), net.mamoe.mirai.event.Listener.EventPriority, net.mamoe.mirai.event.Listener.ConcurrencyKind, kotlin.coroutines.CoroutineContext)net.mamoe.mirai.event/kotlinx.coroutines.-coroutine-scope/subscribe-always.html
$dokka.location:net.mamoe.mirai.event$subscribeAlways(kotlinx.coroutines.CoroutineScope, kotlin.reflect.KClass((net.mamoe.mirai.event.subscribeAlways.E)), kotlin.coroutines.CoroutineContext, net.mamoe.mirai.event.Listener.ConcurrencyKind, net.mamoe.mirai.event.Listener.EventPriority, kotlin.coroutines.SuspendFunction2((net.mamoe.mirai.event.subscribeAlways.E, , kotlin.Unit)))net.mamoe.mirai.event/kotlinx.coroutines.-coroutine-scope/subscribe-always.html
$dokka.location:net.mamoe.mirai.event$subscribeFriendMessages(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.CoroutineContext, net.mamoe.mirai.event.Listener.ConcurrencyKind, net.mamoe.mirai.event.Listener.EventPriority, kotlin.Function1((net.mamoe.mirai.event.MessageSubscribersBuilder((net.mamoe.mirai.message.FriendMessageEvent, net.mamoe.mirai.event.Listener(()), kotlin.Unit, )), net.mamoe.mirai.event.subscribeFriendMessages.R)))net.mamoe.mirai.event/kotlinx.coroutines.-coroutine-scope/subscribe-friend-messages.html
$dokka.location:net.mamoe.mirai.event$subscribeGroupMessages(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.CoroutineContext, net.mamoe.mirai.event.Listener.ConcurrencyKind, net.mamoe.mirai.event.Listener.EventPriority, kotlin.Function1((net.mamoe.mirai.event.MessageSubscribersBuilder((net.mamoe.mirai.message.GroupMessageEvent, net.mamoe.mirai.event.Listener(()), kotlin.Unit, )), net.mamoe.mirai.event.subscribeGroupMessages.R)))net.mamoe.mirai.event/kotlinx.coroutines.-coroutine-scope/subscribe-group-messages.html
$dokka.location:net.mamoe.mirai.event$subscribeMessages(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.CoroutineContext, net.mamoe.mirai.event.Listener.ConcurrencyKind, net.mamoe.mirai.event.Listener.EventPriority, kotlin.Function1((net.mamoe.mirai.event.MessageSubscribersBuilder((net.mamoe.mirai.message.MessageEvent, net.mamoe.mirai.event.Listener(()), kotlin.Unit, )), net.mamoe.mirai.event.subscribeMessages.R)))net.mamoe.mirai.event/kotlinx.coroutines.-coroutine-scope/subscribe-messages.html
$dokka.location:net.mamoe.mirai.event$subscribeOnce(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.CoroutineContext, net.mamoe.mirai.event.Listener.EventPriority, kotlin.coroutines.SuspendFunction2((net.mamoe.mirai.event.subscribeOnce.E, , kotlin.Unit)))net.mamoe.mirai.event/kotlinx.coroutines.-coroutine-scope/subscribe-once.html
$dokka.location:net.mamoe.mirai.event$subscribeOnce(kotlinx.coroutines.CoroutineScope, kotlin.reflect.KClass((net.mamoe.mirai.event.subscribeOnce.E)), kotlin.coroutines.CoroutineContext, net.mamoe.mirai.event.Listener.EventPriority, kotlin.coroutines.SuspendFunction2((net.mamoe.mirai.event.subscribeOnce.E, , kotlin.Unit)))net.mamoe.mirai.event/kotlinx.coroutines.-coroutine-scope/subscribe-once.html
$dokka.location:net.mamoe.mirai.event$subscribeTempMessages(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.CoroutineContext, net.mamoe.mirai.event.Listener.ConcurrencyKind, net.mamoe.mirai.event.Listener.EventPriority, kotlin.Function1((net.mamoe.mirai.event.MessageSubscribersBuilder((net.mamoe.mirai.message.TempMessageEvent, net.mamoe.mirai.event.Listener(()), kotlin.Unit, )), net.mamoe.mirai.event.subscribeTempMessages.R)))net.mamoe.mirai.event/kotlinx.coroutines.-coroutine-scope/subscribe-temp-messages.html
$dokka.location:net.mamoe.mirai.message$sendTo(java.awt.image.BufferedImage, net.mamoe.mirai.message.sendTo.C)net.mamoe.mirai.message/java.awt.image.-buffered-image/send-to.html
$dokka.location:net.mamoe.mirai.message$upload(java.awt.image.BufferedImage, net.mamoe.mirai.contact.Contact)net.mamoe.mirai.message/java.awt.image.-buffered-image/upload.html
$dokka.location:net.mamoe.mirai.message.code$parseMiraiCode(kotlin.String)net.mamoe.mirai.message.code/kotlin.-string/parse-mirai-code.html
$dokka.location:net.mamoe.mirai.message.data$asMessageChain(kotlin.Array((net.mamoe.mirai.message.data.Message)))net.mamoe.mirai.message.data/kotlin.-array/as-message-chain.html
$dokka.location:net.mamoe.mirai.message.data$asMessageChain(kotlin.Array((net.mamoe.mirai.message.data.SingleMessage)))net.mamoe.mirai.message.data/kotlin.-array/as-message-chain.html
$dokka.location:net.mamoe.mirai.message.data$asMessageChain(kotlin.collections.Collection((net.mamoe.mirai.message.data.Message)))net.mamoe.mirai.message.data/kotlin.collections.-collection/as-message-chain.html
$dokka.location:net.mamoe.mirai.message.data$asMessageChain(kotlin.collections.Collection((net.mamoe.mirai.message.data.SingleMessage)))net.mamoe.mirai.message.data/kotlin.collections.-collection/as-message-chain.html
$dokka.location:net.mamoe.mirai.message.data$asMessageChain(kotlin.collections.Iterable((net.mamoe.mirai.message.data.Message)))net.mamoe.mirai.message.data/kotlin.collections.-iterable/as-message-chain.html
$dokka.location:net.mamoe.mirai.message.data$asMessageChain(kotlin.collections.Iterable((net.mamoe.mirai.message.data.SingleMessage)))net.mamoe.mirai.message.data/kotlin.collections.-iterable/as-message-chain.html
$dokka.location:net.mamoe.mirai.message.data$asMessageChain(kotlin.sequences.Sequence((net.mamoe.mirai.message.data.Message)))net.mamoe.mirai.message.data/kotlin.sequences.-sequence/as-message-chain.html
$dokka.location:net.mamoe.mirai.message.data$asMessageChain(kotlin.sequences.Sequence((net.mamoe.mirai.message.data.SingleMessage)))net.mamoe.mirai.message.data/kotlin.sequences.-sequence/as-message-chain.html
$dokka.location:net.mamoe.mirai.message.data$flatten(kotlin.Array((net.mamoe.mirai.message.data.Message)))net.mamoe.mirai.message.data/kotlin.-array/flatten.html
$dokka.location:net.mamoe.mirai.message.data$flatten(kotlin.Array((net.mamoe.mirai.message.data.SingleMessage)))net.mamoe.mirai.message.data/kotlin.-array/flatten.html
$dokka.location:net.mamoe.mirai.message.data$flatten(kotlin.collections.Iterable((net.mamoe.mirai.message.data.Message)))net.mamoe.mirai.message.data/kotlin.collections.-iterable/flatten.html
$dokka.location:net.mamoe.mirai.message.data$flatten(kotlin.collections.Iterable((net.mamoe.mirai.message.data.SingleMessage)))net.mamoe.mirai.message.data/kotlin.collections.-iterable/flatten.html
$dokka.location:net.mamoe.mirai.message.data$flatten(kotlin.sequences.Sequence((net.mamoe.mirai.message.data.Message)))net.mamoe.mirai.message.data/kotlin.sequences.-sequence/flatten.html
$dokka.location:net.mamoe.mirai.message.data$flatten(kotlin.sequences.Sequence((net.mamoe.mirai.message.data.SingleMessage)))net.mamoe.mirai.message.data/kotlin.sequences.-sequence/flatten.html
$dokka.location:net.mamoe.mirai.message.data$toForwardMessage(kotlin.collections.Iterable((net.mamoe.mirai.message.MessageEvent)), net.mamoe.mirai.message.data.ForwardMessage.DisplayStrategy)net.mamoe.mirai.message.data/kotlin.collections.-iterable/to-forward-message.html
$dokka.location:net.mamoe.mirai.utils$asHumanReadable#kotlin.time.Durationnet.mamoe.mirai.utils/kotlin.time.-duration/as-human-readable.html
$dokka.location:net.mamoe.mirai.utils$copyAndClose(kotlinx.coroutines.io.ByteReadChannel, io.ktor.utils.io.ByteWriteChannel)net.mamoe.mirai.utils/kotlinx.coroutines.io.-byte-read-channel/copy-and-close.html
$dokka.location:net.mamoe.mirai.utils$copyAndClose(kotlinx.coroutines.io.ByteReadChannel, java.io.OutputStream)net.mamoe.mirai.utils/kotlinx.coroutines.io.-byte-read-channel/copy-and-close.html
$dokka.location:net.mamoe.mirai.utils$copyAndClose(kotlinx.coroutines.io.ByteReadChannel, kotlinx.coroutines.io.ByteWriteChannel)net.mamoe.mirai.utils/kotlinx.coroutines.io.-byte-read-channel/copy-and-close.html
$dokka.location:net.mamoe.mirai.utils$copyAndClose(kotlinx.coroutines.io.ByteReadChannel, kotlinx.io.core.Output)net.mamoe.mirai.utils/kotlinx.coroutines.io.-byte-read-channel/copy-and-close.html
$dokka.location:net.mamoe.mirai.utils$copyTo(kotlinx.coroutines.io.ByteReadChannel, java.io.OutputStream)net.mamoe.mirai.utils/kotlinx.coroutines.io.-byte-read-channel/copy-to.html
$dokka.location:net.mamoe.mirai.utils$copyTo(kotlinx.coroutines.io.ByteReadChannel, kotlinx.coroutines.io.ByteWriteChannel)net.mamoe.mirai.utils/kotlinx.coroutines.io.-byte-read-channel/copy-to.html
$dokka.location:net.mamoe.mirai.utils$copyTo(kotlinx.coroutines.io.ByteReadChannel, kotlinx.io.core.Output)net.mamoe.mirai.utils/kotlinx.coroutines.io.-byte-read-channel/copy-to.html
$dokka.location:net.mamoe.mirai.utils$daysToMillis#kotlin.Intnet.mamoe.mirai.utils/kotlin.-int/days-to-millis.html
$dokka.location:net.mamoe.mirai.utils$daysToSeconds#kotlin.Intnet.mamoe.mirai.utils/kotlin.-int/days-to-seconds.html
$dokka.location:net.mamoe.mirai.utils$getValue(java.lang.ref.WeakReference((net.mamoe.mirai.utils.getValue.T)), kotlin.Any, kotlin.reflect.KProperty((kotlin.Any)))net.mamoe.mirai.utils/java.lang.ref.-weak-reference/get-value.html
$dokka.location:net.mamoe.mirai.utils$hoursToMillis#kotlin.Intnet.mamoe.mirai.utils/kotlin.-int/hours-to-millis.html
$dokka.location:net.mamoe.mirai.utils$hoursToSeconds#kotlin.Intnet.mamoe.mirai.utils/kotlin.-int/hours-to-seconds.html
$dokka.location:net.mamoe.mirai.utils$ifAbsent(java.lang.ref.WeakReference((net.mamoe.mirai.utils.ifAbsent.T)), kotlin.Function1((net.mamoe.mirai.utils.ifAbsent.T, net.mamoe.mirai.utils.ifAbsent.R)))net.mamoe.mirai.utils/java.lang.ref.-weak-reference/if-absent.html
$dokka.location:net.mamoe.mirai.utils$millisToSeconds#kotlin.Intnet.mamoe.mirai.utils/kotlin.-int/millis-to-seconds.html
$dokka.location:net.mamoe.mirai.utils$minutesToMillis#kotlin.Intnet.mamoe.mirai.utils/kotlin.-int/minutes-to-millis.html
$dokka.location:net.mamoe.mirai.utils$minutesToSeconds#kotlin.Intnet.mamoe.mirai.utils/kotlin.-int/minutes-to-seconds.html
$dokka.location:net.mamoe.mirai.utils$monthsToMillis#kotlin.Intnet.mamoe.mirai.utils/kotlin.-int/months-to-millis.html
$dokka.location:net.mamoe.mirai.utils$monthsToSeconds#kotlin.Intnet.mamoe.mirai.utils/kotlin.-int/months-to-seconds.html
$dokka.location:net.mamoe.mirai.utils$secondsToMillis#kotlin.Intnet.mamoe.mirai.utils/kotlin.-int/seconds-to-millis.html
$dokka.location:net.mamoe.mirai.utils$toExternalImage(java.awt.image.BufferedImage, kotlin.String)net.mamoe.mirai.utils/java.awt.image.-buffered-image/to-external-image.html
$dokka.location:net.mamoe.mirai.utils$unsafe(java.lang.ref.WeakReference((net.mamoe.mirai.utils.unsafe.T)))net.mamoe.mirai.utils/java.lang.ref.-weak-reference/unsafe.html
$dokka.location:net.mamoe.mirai.utils$weeksToMillis#kotlin.Intnet.mamoe.mirai.utils/kotlin.-int/weeks-to-millis.html
$dokka.location:net.mamoe.mirai.utils$weeksToSeconds#kotlin.Intnet.mamoe.mirai.utils/kotlin.-int/weeks-to-seconds.html
java.io
java.net
java.nio
java.nio.file
net.mamoe.mirai
net.mamoe.mirai.contact
net.mamoe.mirai.data
net.mamoe.mirai.event
net.mamoe.mirai.event.events
net.mamoe.mirai.message
net.mamoe.mirai.message.action
net.mamoe.mirai.message.code
net.mamoe.mirai.message.data
net.mamoe.mirai.network
net.mamoe.mirai.utils
